<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android Timer Kitchen | My little Android warehouse]]></title>
  <link href="http://fedepaol.github.io/blog/categories/android-timer-kitchen/atom.xml" rel="self"/>
  <link href="http://fedepaol.github.io/"/>
  <updated>2014-08-24T23:16:45+02:00</updated>
  <id>http://fedepaol.github.io/</id>
  <author>
    <name><![CDATA[Federico Paolinelli]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A New App - Android Kitchen Timer]]></title>
    <link href="http://fedepaol.github.io/blog/2011/10/18/new-app-android-kitchen-timer/"/>
    <updated>2011-10-18T00:00:00+02:00</updated>
    <id>http://fedepaol.github.io/blog/2011/10/18/new-app-android-kitchen-timer</id>
    <content type="html"><![CDATA[<div class='post'>
Pastimer is my 4th app. It&#8217;s a simple (but nice) Android Kitchen Timer based on barcode scanning.<br /><br />I learned some things during my journey of android development, but this time I wanted to focus on user interface and ease of use.<br /><br />As always, it starts as a simple idea, the you start putting some code in it, it&#8217;s &#8220;almost&#8221; working, and the difference between almost working and finished, is something like two months or more. I let it alone for more than two months.<br /><br />However, now it almost ready to be released, and it will very soon.<br /><br />The idea behind it is very simple.<br /><br />You point the barcode, the app looks in its internal database, and if it does know the time associated, starts a timer. If it does not recognize the barcode, it prompts the user asking to put the data.<br /><br />Sounds easy, doesn&#8217;t it? You can give a look at a couple of screenshots here&nbsp;<a href="https://sites.google.com/site/pastimerand/">Android Kitchen Timer</a></div>

]]></content>
  </entry>
  
</feed>
